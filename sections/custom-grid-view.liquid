{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .custom-product-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }

  .product-img-wrapper {
    position: relative;
    cursor: pointer;
  }

  .open-popup {
    position: absolute;
    background: transparent;
    border: none;
    cursor: pointer;
  }

  .product-popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 20px;
    width: 400px;
    box-shadow: 0px 5px 15px rgba(0,0,0,0.3);
    display: none;
  }

  .product-popup.active {
    display: block;
  }

  .close-popup {
    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    position: absolute;
    right: 10px;
    top: 10px;
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding">
  <div class="{{ section.settings.section-checkbox }}">
    <div class="custom-section-product">
      <div class="custom-section-text">
        <h2>{{ section.settings['section-heading-text'] }}</h2>
      </div>

      <div class="custom-product-grid" id="section-{{ section.id }}">
        {% for block in section.blocks %}
          {% assign product = all_products[block.settings['custom-product']] %}

          <div class="product-img-wrapper" data-product-handle="{{ product.handle }}">
            {{ product.featured_image | image_url: width: 433, height: 444 | image_tag: class: 'custom-product-img open-popup', alt: product.title }}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<!-- Popup -->
<div class="product-popup">
  <span class="close-popup">&times;</span>
  <div class="popup-content">
    <img class="popup-product-img" src="" alt="Product Image">
    <h2 class="popup-product-title"></h2>
    <p class="popup-product-description"></p>
    <div class="variant-selectors">
      <label for="size-select">Choose Size:</label>
      <select id="size-select"></select>
    </div>
    <button class="add-to-cart" data-product-id="">Add to Cart</button>
  </div>
</div>

<!-- JavaScript -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const popup = document.querySelector(".product-popup");
    const closePopupBtn = document.querySelector(".close-popup");
    const productImgWrappers = document.querySelectorAll(".product-img-wrapper");

    productImgWrappers.forEach(wrapper => {
      wrapper.addEventListener("click", function () {
        const productHandle = this.getAttribute("data-product-handle");

        fetch(`/products/${productHandle}.json`)
          .then(response => response.json())
          .then(data => {
            const product = data.product;

            document.querySelector(".popup-product-img").src = product.images[0].src;
            document.querySelector(".popup-product-title").textContent = product.title;
            document.querySelector(".popup-product-description").textContent = product.body_html.replace(/(<([^>]+)>)/gi, "").substring(0, 100);
            document.querySelector(".add-to-cart").setAttribute("data-product-id", product.variants[0].id);

            let sizeSelect = document.querySelector("#size-select");
            sizeSelect.innerHTML = "";
            let sizes = [...new Set(product.variants.map(v => v.option2))];

            sizes.forEach(size => {
              let option = document.createElement("option");
              option.value = size;
              option.textContent = size;
              sizeSelect.appendChild(option);
            });

            popup.classList.add("active");
          });
      });
    });

    closePopupBtn.addEventListener("click", function () {
      popup.classList.remove("active");
    });

    document.querySelector(".add-to-cart").addEventListener("click", function () {
      let productId = this.getAttribute("data-product-id");
      let selectedSize = document.querySelector("#size-select").value;

      fetch("/cart/add.js", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ quantity: 1, id: productId })
      })
      .then(response => response.json())
      .then(() => {
        alert("Product added to cart!");
        window.location.href = "/cart";
      });
    });
  });
</script>

{% schema %}
{
  "name": "custom grid view",
  "class": "custom-grid-view",
  "settings": [
    {
      "type": "richtext",
      "id": "section-heading-text",
      "label": "Heading"
    },
    {
      "type": "select",
      "id": "section-checkbox",
      "label": "Layout",
      "options": [
        { "label": "Full Width", "value": "full-width" },
        { "label": "Page Width", "value": "page-width" }
      ],
      "default": "page-width"
    },
    {
      "type": "header",
      "content": "Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "custom-product",
      "name": "Custom Product",
      "settings": [
        {
          "type": "product",
          "id": "custom-product",
          "label": "Product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Grid View"
    }
  ]
}
{% endschema %}
